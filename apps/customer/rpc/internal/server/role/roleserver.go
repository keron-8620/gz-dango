// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: customer.proto

package server

import (
	"context"

	"go-dango/apps/customer/rpc/internal/logic/role"
	"go-dango/apps/customer/rpc/internal/svc"
	"go-dango/apps/customer/rpc/pb"
)

type RoleServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRoleServer
}

func NewRoleServer(svcCtx *svc.ServiceContext) *RoleServer {
	return &RoleServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleServer) CreateRole(ctx context.Context, in *pb.CreateRoleRequest) (*pb.RoleOut, error) {
	l := rolelogic.NewCreateRoleLogic(ctx, s.svcCtx)
	return l.CreateRole(in)
}

func (s *RoleServer) UpdateRole(ctx context.Context, in *pb.UpdateRoleRequest) (*pb.RoleOut, error) {
	l := rolelogic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

func (s *RoleServer) DeleteRole(ctx context.Context, in *pb.DeleteRoleRequest) (*pb.NilOut, error) {
	l := rolelogic.NewDeleteRoleLogic(ctx, s.svcCtx)
	return l.DeleteRole(in)
}

func (s *RoleServer) GetRole(ctx context.Context, in *pb.GetRoleRequest) (*pb.RoleOut, error) {
	l := rolelogic.NewGetRoleLogic(ctx, s.svcCtx)
	return l.GetRole(in)
}

func (s *RoleServer) ListRole(ctx context.Context, in *pb.ListRoleRequest) (*pb.PagRoleOutBase, error) {
	l := rolelogic.NewListRoleLogic(ctx, s.svcCtx)
	return l.ListRole(in)
}

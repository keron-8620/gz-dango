// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: customer.proto

package server

import (
	"context"

	"go-dango/apps/customer/rpc/internal/logic/permission"
	"go-dango/apps/customer/rpc/internal/svc"
	"go-dango/apps/customer/rpc/pb"
)

type PermissionServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedPermissionServer
}

func NewPermissionServer(svcCtx *svc.ServiceContext) *PermissionServer {
	return &PermissionServer{
		svcCtx: svcCtx,
	}
}

func (s *PermissionServer) CreatePermission(ctx context.Context, in *pb.CreatePermissionRequest) (*pb.PermissionOutBase, error) {
	l := permissionlogic.NewCreatePermissionLogic(ctx, s.svcCtx)
	return l.CreatePermission(in)
}

func (s *PermissionServer) UpdatePermission(ctx context.Context, in *pb.UpdatePermissionRequest) (*pb.PermissionOutBase, error) {
	l := permissionlogic.NewUpdatePermissionLogic(ctx, s.svcCtx)
	return l.UpdatePermission(in)
}

func (s *PermissionServer) DeletePermission(ctx context.Context, in *pb.DeletePermissionRequest) (*pb.NilOut, error) {
	l := permissionlogic.NewDeletePermissionLogic(ctx, s.svcCtx)
	return l.DeletePermission(in)
}

func (s *PermissionServer) GetPermission(ctx context.Context, in *pb.GetPermissionRequest) (*pb.PermissionOutBase, error) {
	l := permissionlogic.NewGetPermissionLogic(ctx, s.svcCtx)
	return l.GetPermission(in)
}

func (s *PermissionServer) ListPermission(ctx context.Context, in *pb.ListPermissionRequest) (*pb.PagPermissionOutBase, error) {
	l := permissionlogic.NewListPermissionLogic(ctx, s.svcCtx)
	return l.ListPermission(in)
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: customer.proto

package server

import (
	"context"

	"go-dango/apps/customer/rpc/internal/logic/button"
	"go-dango/apps/customer/rpc/internal/svc"
	"go-dango/apps/customer/rpc/pb"
)

type ButtonServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedButtonServer
}

func NewButtonServer(svcCtx *svc.ServiceContext) *ButtonServer {
	return &ButtonServer{
		svcCtx: svcCtx,
	}
}

func (s *ButtonServer) CreateButton(ctx context.Context, in *pb.CreateButtonRequest) (*pb.ButtonOut, error) {
	l := buttonlogic.NewCreateButtonLogic(ctx, s.svcCtx)
	return l.CreateButton(in)
}

func (s *ButtonServer) UpdateButton(ctx context.Context, in *pb.UpdateButtonRequest) (*pb.ButtonOut, error) {
	l := buttonlogic.NewUpdateButtonLogic(ctx, s.svcCtx)
	return l.UpdateButton(in)
}

func (s *ButtonServer) DeleteButton(ctx context.Context, in *pb.DeleteButtonRequest) (*pb.NilOut, error) {
	l := buttonlogic.NewDeleteButtonLogic(ctx, s.svcCtx)
	return l.DeleteButton(in)
}

func (s *ButtonServer) GetButton(ctx context.Context, in *pb.GetButtonRequest) (*pb.ButtonOut, error) {
	l := buttonlogic.NewGetButtonLogic(ctx, s.svcCtx)
	return l.GetButton(in)
}

func (s *ButtonServer) ListButton(ctx context.Context, in *pb.ListButtonRequest) (*pb.PagButtonOutBase, error) {
	l := buttonlogic.NewListButtonLogic(ctx, s.svcCtx)
	return l.ListButton(in)
}

// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: customer.proto

package server

import (
	"context"

	"gz-dango/apps/customer/rpc/internal/logic/user"
	"gz-dango/apps/customer/rpc/internal/svc"
	"gz-dango/apps/customer/rpc/pb"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) CreateUser(ctx context.Context, in *pb.CreateUserRequest) (*pb.UserOut, error) {
	l := userlogic.NewCreateUserLogic(ctx, s.svcCtx)
	return l.CreateUser(in)
}

func (s *UserServer) UpdateCustomer(ctx context.Context, in *pb.UpdateUserRequest) (*pb.UserOut, error) {
	l := userlogic.NewUpdateCustomerLogic(ctx, s.svcCtx)
	return l.UpdateCustomer(in)
}

func (s *UserServer) DeleteCustomer(ctx context.Context, in *pb.DeleteUserRequest) (*pb.NilOut, error) {
	l := userlogic.NewDeleteCustomerLogic(ctx, s.svcCtx)
	return l.DeleteCustomer(in)
}

func (s *UserServer) GetCustomer(ctx context.Context, in *pb.GetUserRequest) (*pb.UserOut, error) {
	l := userlogic.NewGetCustomerLogic(ctx, s.svcCtx)
	return l.GetCustomer(in)
}

func (s *UserServer) ListCustomer(ctx context.Context, in *pb.ListUserRequest) (*pb.PagUserOut, error) {
	l := userlogic.NewListCustomerLogic(ctx, s.svcCtx)
	return l.ListCustomer(in)
}

func (s *UserServer) ResetPassword(ctx context.Context, in *pb.ResetPasswordRequest) (*pb.NilOut, error) {
	l := userlogic.NewResetPasswordLogic(ctx, s.svcCtx)
	return l.ResetPassword(in)
}

func (s *UserServer) ChangePassword(ctx context.Context, in *pb.ChangePasswordRequest) (*pb.NilOut, error) {
	l := userlogic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}

func (s *UserServer) Login(ctx context.Context, in *pb.LoginRequest) (*pb.LoginOut, error) {
	l := userlogic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

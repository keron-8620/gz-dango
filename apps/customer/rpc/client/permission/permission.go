// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.2
// Source: customer.proto

package permission

import (
	"context"

	"gz-dango/apps/customer/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BoolValue               = pb.BoolValue
	ButtonOut               = pb.ButtonOut
	ButtonOutBase           = pb.ButtonOutBase
	ChangePasswordRequest   = pb.ChangePasswordRequest
	CreateButtonRequest     = pb.CreateButtonRequest
	CreateMenuRequest       = pb.CreateMenuRequest
	CreatePermissionRequest = pb.CreatePermissionRequest
	CreateRoleRequest       = pb.CreateRoleRequest
	CreateUserRequest       = pb.CreateUserRequest
	DeleteButtonRequest     = pb.DeleteButtonRequest
	DeleteMenuRequest       = pb.DeleteMenuRequest
	DeletePermissionRequest = pb.DeletePermissionRequest
	DeleteRoleRequest       = pb.DeleteRoleRequest
	DeleteUserRequest       = pb.DeleteUserRequest
	GetButtonRequest        = pb.GetButtonRequest
	GetMenuRequest          = pb.GetMenuRequest
	GetPermissionRequest    = pb.GetPermissionRequest
	GetRoleRequest          = pb.GetRoleRequest
	GetUserRequest          = pb.GetUserRequest
	ListButtonRequest       = pb.ListButtonRequest
	ListMenuRequest         = pb.ListMenuRequest
	ListPermissionRequest   = pb.ListPermissionRequest
	ListRoleRequest         = pb.ListRoleRequest
	ListUserRequest         = pb.ListUserRequest
	LoginOut                = pb.LoginOut
	LoginRequest            = pb.LoginRequest
	MenuOut                 = pb.MenuOut
	MenuOutBase             = pb.MenuOutBase
	MetaSchemas             = pb.MetaSchemas
	NilOut                  = pb.NilOut
	PagButtonOutBase        = pb.PagButtonOutBase
	PagMenuOutBase          = pb.PagMenuOutBase
	PagPermissionOutBase    = pb.PagPermissionOutBase
	PagRoleOutBase          = pb.PagRoleOutBase
	PagUserOut              = pb.PagUserOut
	PermissionOutBase       = pb.PermissionOutBase
	ResetPasswordRequest    = pb.ResetPasswordRequest
	RoleOut                 = pb.RoleOut
	RoleOutBase             = pb.RoleOutBase
	UInt32Value             = pb.UInt32Value
	UpdateButtonRequest     = pb.UpdateButtonRequest
	UpdateMenuRequest       = pb.UpdateMenuRequest
	UpdatePermissionRequest = pb.UpdatePermissionRequest
	UpdateRoleRequest       = pb.UpdateRoleRequest
	UpdateUserRequest       = pb.UpdateUserRequest
	UserOut                 = pb.UserOut

	Permission interface {
		CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error)
		UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error)
		DeletePermission(ctx context.Context, in *DeletePermissionRequest, opts ...grpc.CallOption) (*NilOut, error)
		GetPermission(ctx context.Context, in *GetPermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error)
		ListPermission(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*PagPermissionOutBase, error)
	}

	defaultPermission struct {
		cli zrpc.Client
	}
)

func NewPermission(cli zrpc.Client) Permission {
	return &defaultPermission{
		cli: cli,
	}
}

func (m *defaultPermission) CreatePermission(ctx context.Context, in *CreatePermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error) {
	client := pb.NewPermissionClient(m.cli.Conn())
	return client.CreatePermission(ctx, in, opts...)
}

func (m *defaultPermission) UpdatePermission(ctx context.Context, in *UpdatePermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error) {
	client := pb.NewPermissionClient(m.cli.Conn())
	return client.UpdatePermission(ctx, in, opts...)
}

func (m *defaultPermission) DeletePermission(ctx context.Context, in *DeletePermissionRequest, opts ...grpc.CallOption) (*NilOut, error) {
	client := pb.NewPermissionClient(m.cli.Conn())
	return client.DeletePermission(ctx, in, opts...)
}

func (m *defaultPermission) GetPermission(ctx context.Context, in *GetPermissionRequest, opts ...grpc.CallOption) (*PermissionOutBase, error) {
	client := pb.NewPermissionClient(m.cli.Conn())
	return client.GetPermission(ctx, in, opts...)
}

func (m *defaultPermission) ListPermission(ctx context.Context, in *ListPermissionRequest, opts ...grpc.CallOption) (*PagPermissionOutBase, error) {
	client := pb.NewPermissionClient(m.cli.Conn())
	return client.ListPermission(ctx, in, opts...)
}
